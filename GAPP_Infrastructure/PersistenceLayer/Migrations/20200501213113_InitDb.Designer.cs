// <auto-generated />
using System;
using GAPP_Infrastructure.PersistenceLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GAPP_Infrastructure.PersistenceLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200501213113_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GAPP_Infrastructure.Domain.AccountFocusSubject", b =>
                {
                    b.Property<long>("InstagramAccountId")
                        .HasColumnType("bigint");

                    b.Property<int>("FocusSubjectId")
                        .HasColumnType("int");

                    b.HasKey("InstagramAccountId", "FocusSubjectId");

                    b.HasIndex("FocusSubjectId")
                        .IsUnique();

                    b.HasIndex("InstagramAccountId")
                        .IsUnique();

                    b.ToTable("AccountFocusSubject");
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.FocusSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FocusSubject");
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.InstagramAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("InstagramAccounts");
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.InstagramPost", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CommentsCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hashtags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstagramAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("LikesCount")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)")
                        .HasMaxLength(2048);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("InstagramAccountId");

                    b.HasIndex("ShortCode")
                        .IsUnique();

                    b.ToTable("InstagramPosts");
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.PostFocusSubject", b =>
                {
                    b.Property<string>("InstagramPostId")
                        .HasColumnType("nvarchar(21)");

                    b.Property<int>("FocusSubjectId")
                        .HasColumnType("int");

                    b.HasKey("InstagramPostId", "FocusSubjectId");

                    b.HasIndex("FocusSubjectId")
                        .IsUnique();

                    b.HasIndex("InstagramPostId")
                        .IsUnique();

                    b.ToTable("PostFocusSubject");
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.AccountFocusSubject", b =>
                {
                    b.HasOne("GAPP_Infrastructure.Domain.FocusSubject", "FocusSubject")
                        .WithMany("AccountFocusSubjects")
                        .HasForeignKey("FocusSubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GAPP_Infrastructure.Domain.InstagramAccount", "InstagramAccount")
                        .WithMany("AccountFocusSubjects")
                        .HasForeignKey("InstagramAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.InstagramPost", b =>
                {
                    b.HasOne("GAPP_Infrastructure.Domain.InstagramAccount", "InstagramAccount")
                        .WithMany("InstagramPosts")
                        .HasForeignKey("InstagramAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GAPP_Infrastructure.Domain.PostFocusSubject", b =>
                {
                    b.HasOne("GAPP_Infrastructure.Domain.FocusSubject", "FocusSubject")
                        .WithMany("PostFocusSubjects")
                        .HasForeignKey("FocusSubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GAPP_Infrastructure.Domain.InstagramPost", "InstagramPost")
                        .WithMany("PostFocusSubjects")
                        .HasForeignKey("InstagramPostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
